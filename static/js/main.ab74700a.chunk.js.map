{"version":3,"sources":["Navbar.js","reducers/reducer.js","reportWebVitals.js","index.js","all.js","cityView.js"],"names":["Navbar","className","activeClassName","exact","to","name","eng","map","item","allReducers","combineReducers","count","state","action","type","console","log","datas","data","finish","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","component","useState","setCount","Alldata","setAlldata","isLast","setisLast","onScroll","window","scrollY","innerHeight","document","body","scrollHeight","getData","skip","a","fetch","res","json","concat","length","useEffect","addEventListener","removeEventListener","Name","DescriptionDetail","Picture","PictureUrl1","src","alt","ID","match","useRouteMatch","cityData","setCityData","startGetAPI","setStartGetAPI","getCityData","params","city","getElementById"],"mappings":"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","file":"static/js/main.ab74700a.chunk.js","sourcesContent":["import React from 'react';\nimport { HashRouter, NavLink } from 'react-router-dom';\n\nexport default function Navbar() {\n  const CityArray = [\n    { name: '臺北市', eng: 'Taipei' },\n    { name: '新北市', eng: 'NewTaipei' },\n    { name: '桃園市', eng: 'Taoyuan' },\n    { name: '臺中市', eng: 'Taichung' },\n    { name: '臺南市', eng: 'Tainan' },\n    { name: '高雄市', eng: 'Kaohsiung' },\n    { name: '基隆市', eng: 'Keelung' },\n    { name: '新竹市', eng: 'Hsinchu' },\n    { name: '新竹縣', eng: 'HsinchuCounty' },\n    { name: '苗栗縣', eng: 'MiaoliCounty' },\n    { name: '彰化縣', eng: 'ChanghuaCounty' },\n    { name: '南投縣', eng: 'NantouCounty' },\n    { name: '雲林縣', eng: 'YunlinCounty' },\n    { name: '嘉義縣', eng: 'ChiayiCounty' },\n    { name: '嘉義市', eng: 'Chiayi' },\n    { name: '屏東縣', eng: 'PingtungCounty' },\n    { name: '宜蘭縣', eng: 'YilanCounty' },\n    { name: '花蓮縣', eng: 'HualienCounty' },\n    { name: '臺東縣', eng: 'TaitungCounty' },\n    { name: '金門縣', eng: 'KinmenCounty' },\n    { name: '澎湖縣', eng: 'PenghuCounty' },\n    { name: '連江縣', eng: 'LienchiangCounty' },\n  ];\n\n  return (\n    <HashRouter>\n      <ul className=\"bar col-2 col-sm-1   px-0\">\n        <li>\n          <NavLink activeClassName=\"active\" exact to=\"/scenicSpot\">ALL</NavLink>\n        </li>\n        {\n          CityArray.map((item) => (\n            <li key={item.eng}>\n              <NavLink activeClassName=\"active\" to={`/scenicSpot/${item.eng}`}>{item.name}</NavLink>\n            </li>\n          ))\n        }\n        {/* <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Taipei\">臺北市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/NewTaipei\">新北市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Taoyuan\">桃園市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Taichung\">臺中市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Tainan\">臺南市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Kaohsiung\">高雄市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Keelung\">基隆市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Hsinchu\">新竹市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/HsinchuCounty\">新竹縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/MiaoliCounty\">苗栗縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/ChanghuaCounty\">彰化縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/NantouCounty\">南投縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/YunlinCounty\">雲林縣</NavLink>\n\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/ChiayiCounty\">嘉義縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/Chiayi\">嘉義市</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/PingtungCounty\">屏東縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/YilanCounty\">宜蘭縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/HualienCounty\">花蓮縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/TaitungCounty\">臺東縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/KinmenCounty\">金門縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/PenghuCounty\">澎湖縣</NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/scenicSpot/LienchiangCounty\">連江縣</NavLink>\n        </li> */}\n      </ul>\n    </HashRouter>\n  );\n}\n","import { combineReducers } from 'redux';\n\nfunction calculate(state = 20, action) {\n  switch (action.type) {\n    case 'increment':\n      return state + 20;\n    case 'init':\n      console.log('跑init', state);\n      return 20;\n    default:\n      return state;\n  }\n}\n\nconst datas = (state = [], action) => {\n  switch (action.type) {\n    case 'get_success':\n      return { state: action.data, finish: false };\n    case 'get_last':\n      return { state: action.data, finish: true };\n    default:\n      return state;\n  }\n};\n\nconst allReducers = combineReducers({\n  count: calculate,\n  datas,\n});\n\nexport default allReducers;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// import App from './App';\n// import AAA from './aaa';\nimport All from './all';\nimport CityView from './cityView';\nimport Navbar from './Navbar';\nimport allReducers from './reducers/reducer';\nimport reportWebVitals from './reportWebVitals';\nimport './custom.scss';\n\nconst store = createStore(allReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <div className=\"container d-flex py-4\">\n        <Navbar />\n        <Switch>\n\n          <Route path=\"/scenicSpot\" exact component={All} />\n          <Route path=\"/scenicSpot/:city\" component={CityView} />\n          {/* <Route path=\"/\" component={App} /> */}\n\n        </Switch>\n      </div>\n\n    </HashRouter>\n\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useEffect, useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import getData from './action/getdata';\n\nexport default function child() {\n  // const count = useSelector((state) => state.count);\n  // const API_DATA = useSelector((state) => state.datas);\n\n  // 跳過的筆數\n  const [count, setCount] = useState(0);\n  // API資料\n  const [Alldata, setAlldata] = useState([]);\n  // 是否最後一頁\n  const [isLast, setisLast] = useState(false);\n\n  // const dispatch = useDispatch();\n  // const updataData = () => {\n  //   dispatch({ type: 'increment' });\n  // };\n\n  const onScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.body.scrollHeight) {\n      setCount(count + 30);\n    }\n  };\n\n  const getData = async (skip) => {\n    console.log('全部發送api');\n    const res = await fetch(`https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot?$top=30&$skip=${skip}&$format=JSON`);\n    const data = await res.json();\n    setAlldata(Alldata.concat(data));\n    if (data.length !== 30) setisLast(true);\n    else setisLast(false);\n  };\n  useEffect(() => {\n    if (!isLast) { window.addEventListener('scroll', onScroll); }\n    return () => window.removeEventListener('scroll', onScroll);\n  });\n\n  useEffect(() => {\n    getData(count);\n  }, [count]);\n\n  // useEffect(() => {\n  //   console.log('組件建立');\n  //   // console.log('Alldata', Alldata);\n  //   dispatch({ type: 'init' });\n  //   setAlldata([]);\n  //   // await dispatch(getData(0));\n  //   return () => window.removeEventListener('scroll', onScroll);\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('count變', count);\n  //   dispatch(getData(count - 20));\n  // }, [count]);\n\n  // useEffect(() => {\n  //   console.log('Alldata', Alldata);\n  // }, [Alldata]);\n\n  // useEffect(() => {\n  //   console.log('寫入');\n  //   // console.log('Alldata', Alldata);\n  //   console.log('API_DATA', API_DATA);\n  //   if (API_DATA.state && !API_DATA.finish) {\n  //     setAlldata(Alldata.concat(API_DATA.state));\n  //     window.addEventListener('scroll', onScroll);\n  //   } else if (API_DATA.finish) {\n  //     setAlldata(Alldata.concat(API_DATA.state));\n  //   }\n  //   return () => window.removeEventListener('scroll', onScroll);\n  // }, [API_DATA]);\n\n  return (\n    <div className=\"view col-11\">\n      {/* <h1 className=\"text-primary\">我是子組件</h1> */}\n      {/* <button type=\"button\" onClick={() => props.changeNum()}>母組件++</button> */}\n      {/* <h4>\n        child:\n        {count}\n      </h4> */}\n      {/* <button type=\"button\" onClick={updataData}>更新</button> */}\n\n      <ul>\n        {Alldata ? Alldata.map((item) => (\n          <li key={item.ID} className=\"mb-3 py-2 px-2\">\n            <h2>{item.Name}</h2>\n            <p>{item.DescriptionDetail}</p>\n            {\n              item.Picture.PictureUrl1 ? <img src={item.Picture.PictureUrl1} alt=\"\" /> : ''\n            }\n\n          </li>\n        )) : ''}\n      </ul>\n      {/* {API_DATA ? 'yes' : 'no'} */}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nexport default function cityView() {\n  const match = useRouteMatch();\n\n  // 跳過的筆數\n  const [count, setCount] = useState(0);\n  // API資料\n  const [cityData, setCityData] = useState([]);\n  // 是否最後一頁\n  const [isLast, setisLast] = useState(false);\n  // 防止重複call api\n  const [startGetAPI, setStartGetAPI] = useState(false);\n\n  const onScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.body.scrollHeight) {\n      setCount(count + 30);\n    }\n  };\n  const getCityData = async (skip) => {\n    const res = await fetch(`https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot/${match.params.city}?$top=30&$skip=${skip}&$format=JSON`);\n    const data = await res.json();\n    console.log('data', data);\n    setCityData(cityData.concat(data));\n    if (data.length !== 30) setisLast(true);\n    else setisLast(false);\n  };\n  useEffect(() => {\n    if (!isLast) { window.addEventListener('scroll', onScroll); }\n    return () => window.removeEventListener('scroll', onScroll);\n  });\n\n  useEffect(() => {\n    if (count !== 0) {\n      getCityData(count);\n    }\n  }, [count]);\n\n  useEffect(() => {\n    setStartGetAPI(true);\n    setCityData([]);\n  }, [match]);\n\n  useEffect(() => {\n    if (cityData.length === 0 && count === 0 && startGetAPI === true) {\n      getCityData(0);\n      setStartGetAPI(false);\n    } else if (cityData.length === 0 && count !== 0) {\n      setCount(0);\n      getCityData(0);\n    }\n  }, [cityData]);\n\n  return (\n    <div className=\"view col-10 col-sm-11\">\n\n      <ul className=\"\">\n        {\n           cityData.map((item) => (\n             <li key={item.ID} className=\"mb-3 py-2 px-2\">\n\n               <h2>{item.Name}</h2>\n               <p>{item.DescriptionDetail}</p>\n               {\n                  item.Picture.PictureUrl1\n                    ? <img src={item.Picture.PictureUrl1} alt=\"\" /> : ''\n                }\n             </li>\n           ))\n        }\n      </ul>\n\n    </div>\n  );\n}\n"],"sourceRoot":""}